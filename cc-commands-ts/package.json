{
  "name": "cc-commands-ts",
  "description": "TypeScript implementation of Claude Code commands",
  "version": "0.0.0",
  "author": "Joseph",
  "bin": {
    "cc-ts": "./bin/run.js"
  },
  "bugs": "https://github.com/cc-commands/cc-commands-ts/issues",
  "dependencies": {
    "@oclif/core": "^4",
    "@oclif/plugin-help": "^6",
    "@oclif/plugin-plugins": "^5",
    "@octokit/graphql": "^9.0.1",
    "@octokit/rest": "^22.0.0",
    "chalk": "^5.4.1",
    "date-fns": "^4.1.0",
    "ora": "^8.2.0",
    "simple-git": "^3.28.0"
  },
  "devDependencies": {
    "@eslint/compat": "^1",
    "@oclif/prettier-config": "^0.2.1",
    "@oclif/test": "^4",
    "@types/chai": "^4",
    "@types/mocha": "^10",
    "@types/node": "^18",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "c8": "^10.1.3",
    "chai": "^4",
    "eslint": "^9",
    "eslint-config-oclif": "^6",
    "eslint-config-prettier": "^10",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsdoc": "^51.4.1",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-unicorn": "^60.0.0",
    "mocha": "^10",
    "oclif": "^4",
    "shx": "^0.3.3",
    "ts-node": "^10",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=22.0.0"
  },
  "files": [
    "./bin",
    "./dist",
    "./oclif.manifest.json"
  ],
  "homepage": "https://github.com/cc-commands/cc-commands-ts",
  "keywords": [
    "oclif"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "type": "module",
  "oclif": {
    "bin": "cc-ts",
    "dirname": "cc-ts",
    "commands": "./dist/commands",
    "plugins": [
      "@oclif/plugin-help",
      "@oclif/plugin-plugins"
    ],
    "topicSeparator": " ",
    "topics": {
      "hello": {
        "description": "Say hello to the world and others"
      }
    }
  },
  "repository": "cc-commands/cc-commands-ts",
  "scripts": {
    "build": "shx rm -rf dist && tsc -b && oclif manifest",
    "lint": "eslint \"src/**/*.ts\" \"test/**/*.ts\" --fix",
    "lint:report": "shx rm -f var/eslint-report.json && eslint \"src/**/*.ts\" \"test/**/*.ts\" --fix --format json --output-file var/eslint-report.json",
    "test": "shx rm -f var/test-results.json && npm run build && vitest run --reporter json --outputFile var/test-results.json --reporter verbose",
    "test:watch": "vitest",
    "test:coverage": "shx rm -f var/test-results-coverage.json && shx rm -rf var/coverage && npm run build && vitest run --coverage --reporter json --outputFile var/test-results-coverage.json || (jq -e '.success == true' var/test-results-coverage.json > /dev/null && exit 0 || exit 1)",
    "test:real": "npm run build && vitest run archive/test/commands/g/gh/project/summary.real-integration.test.ts",
    "typecheck": "tsc -b --noEmit",
    "typecheck:report": "shx rm -f var/typecheck-report.txt && tsc -b --noEmit --pretty false > var/typecheck-report.txt 2>&1 || true",
    "qa": "shx mkdir -p var && (npm run build && npm run lint:report && npm run typecheck:report && npm run test:coverage && ./scripts/qa-success.bash) || ./scripts/qa-failure.bash",
    "qa:analyze": "echo \"=== QA ANALYSIS (from result files) ===\" && echo \"ESLint issues:   $(jq '.length' var/eslint-report.json 2>/dev/null || echo 'N/A')\" && echo \"TypeScript errors: $(wc -l < var/typecheck-report.txt 2>/dev/null || echo 'N/A')\" && echo \"Test results:    $(jq '.numFailedTests + .numPassedTests | . as \\$total | \"\\(.numPassedTests)/\\(\\$total) passed\"' var/test-results-coverage.json 2>/dev/null || echo 'N/A')\" && echo \"Coverage:        $(jq '.statements.pct' var/coverage/coverage-summary.json 2>/dev/null || echo 'N/A')%\"",
    "postpack": "shx rm -f oclif.manifest.json",
    "posttest": "npm run lint",
    "prepack": "oclif manifest && oclif readme",
    "version": "oclif readme && git add archive/README.md"
  },
  "types": "dist/index.d.ts"
}
